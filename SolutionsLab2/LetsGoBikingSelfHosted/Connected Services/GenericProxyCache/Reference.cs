//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LetsGoBikingSelfHosted.GenericProxyCache {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GenericProxyCache.IProxyCache")]
    public interface IProxyCache {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/Request", ReplyAction="http://tempuri.org/IProxyCache/RequestResponse")]
        string Request(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/Request", ReplyAction="http://tempuri.org/IProxyCache/RequestResponse")]
        System.Threading.Tasks.Task<string> RequestAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/getContractsList", ReplyAction="http://tempuri.org/IProxyCache/getContractsListResponse")]
        string getContractsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/getContractsList", ReplyAction="http://tempuri.org/IProxyCache/getContractsListResponse")]
        System.Threading.Tasks.Task<string> getContractsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/getStationsList", ReplyAction="http://tempuri.org/IProxyCache/getStationsListResponse")]
        string getStationsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/getStationsList", ReplyAction="http://tempuri.org/IProxyCache/getStationsListResponse")]
        System.Threading.Tasks.Task<string> getStationsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/getStationsListWithContractName", ReplyAction="http://tempuri.org/IProxyCache/getStationsListWithContractNameResponse")]
        string getStationsListWithContractName(string contractName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCache/getStationsListWithContractName", ReplyAction="http://tempuri.org/IProxyCache/getStationsListWithContractNameResponse")]
        System.Threading.Tasks.Task<string> getStationsListWithContractNameAsync(string contractName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProxyCacheChannel : LetsGoBikingSelfHosted.GenericProxyCache.IProxyCache, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProxyCacheClient : System.ServiceModel.ClientBase<LetsGoBikingSelfHosted.GenericProxyCache.IProxyCache>, LetsGoBikingSelfHosted.GenericProxyCache.IProxyCache {
        
        public ProxyCacheClient() {
        }
        
        public ProxyCacheClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyCacheClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyCacheClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyCacheClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Request(string url) {
            return base.Channel.Request(url);
        }
        
        public System.Threading.Tasks.Task<string> RequestAsync(string url) {
            return base.Channel.RequestAsync(url);
        }
        
        public string getContractsList() {
            return base.Channel.getContractsList();
        }
        
        public System.Threading.Tasks.Task<string> getContractsListAsync() {
            return base.Channel.getContractsListAsync();
        }
        
        public string getStationsList() {
            return base.Channel.getStationsList();
        }
        
        public System.Threading.Tasks.Task<string> getStationsListAsync() {
            return base.Channel.getStationsListAsync();
        }
        
        public string getStationsListWithContractName(string contractName) {
            return base.Channel.getStationsListWithContractName(contractName);
        }
        
        public System.Threading.Tasks.Task<string> getStationsListWithContractNameAsync(string contractName) {
            return base.Channel.getStationsListWithContractNameAsync(contractName);
        }
    }
}
